---
name: Wordpress Data Puppeteer Scenario
author: Arne Tarara
version: 1
architecture: linux

services:
  wordpress-mariadb-data-container:
    image: wordpress-official-data-mariadb
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      #    ports:
      #- 3306:3306
# This command is needed, cause the container needs a bootup time to work
    setup-commands:
      - sleep 20
    networks:
      - wordpress-mariadb-data-green-coding-network
  green-coding-wordpress-apache-data-container:
    image: wordpress-official-data-apache
    environment:
      WORDPRESS_DB_HOST: wordpress-mariadb-data-container
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      #    ports:
      #- 9875:9875
    networks:
      - wordpress-mariadb-data-green-coding-network
    folder-destination: "/tmp/repo"
  green-coding-puppeteer-container:
    image: greencoding/puppeteer-chrome
    setup-commands:
      - cp /tmp/repo/puppeteer-flow.js /var/www/puppeteer-flow.js
    networks:
      - wordpress-mariadb-data-green-coding-network
flow:
  - name: Check Website
    container: green-coding-puppeteer-container
    commands:
      - type: console
        command: node /var/www/puppeteer-flow.js
        note: Starting Pupeteer Flow
        read-notes-stdout: true
      - type: console
        command: sleep 30
        note: Idling
      - type: console
        command: node /var/www/puppeteer-flow.js
        note: Starting Pupeteer Flow again
        read-notes-stdout: true

networks:
  wordpress-mariadb-data-green-coding-network:
